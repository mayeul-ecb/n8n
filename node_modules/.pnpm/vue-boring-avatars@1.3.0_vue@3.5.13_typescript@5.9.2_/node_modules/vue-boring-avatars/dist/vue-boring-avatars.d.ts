import type { PropType } from "vue";
declare type Variant = "bauhaus" | "beam" | "marble" | "pixel" | "ring" | "sunset";
declare const _default: import("vue").DefineComponent<{
    variant: {
        type: PropType<Variant>;
        required: false;
        default: string;
        validator(value: string): boolean;
    };
    colors: {
        type: PropType<string[]>;
        required: false;
        default: () => string[];
    };
    name: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    square: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    size: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
    title: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    variant: {
        type: PropType<Variant>;
        required: false;
        default: string;
        validator(value: string): boolean;
    };
    colors: {
        type: PropType<string[]>;
        required: false;
        default: () => string[];
    };
    name: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    square: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    size: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
    title: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>>, {
    square: boolean;
    name: string;
    title: boolean;
    size: number;
    colors: string[];
    variant: Variant;
}>;
export default _default;
