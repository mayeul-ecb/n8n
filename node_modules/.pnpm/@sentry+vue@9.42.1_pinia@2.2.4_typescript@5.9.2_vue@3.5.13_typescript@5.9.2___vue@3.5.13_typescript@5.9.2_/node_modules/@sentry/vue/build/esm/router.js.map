{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { captureException } from '@sentry/browser';\nimport type { Span, SpanAttributes, StartSpanOptions, TransactionSource } from '@sentry/core';\nimport {\n  getActiveSpan,\n  getCurrentScope,\n  getRootSpan,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  spanToJSON,\n} from '@sentry/core';\n\n// The following type is an intersection of the Route type from VueRouter v2, v3, and v4.\n// This is not great, but kinda necessary to make it work with all versions at the same time.\nexport type Route = {\n  /** Unparameterized URL */\n  path: string;\n  /**\n   * Query params (keys map to null when there is no value associated, e.g. \"?foo\" and to an array when there are\n   * multiple query params that have the same key, e.g. \"?foo&foo=bar\")\n   */\n  query: Record<string, string | null | (string | null)[]>;\n  /** Route name (VueRouter provides a way to give routes individual names) */\n  name?: string | symbol | null | undefined;\n  /** Evaluated parameters */\n  params: Record<string, string | string[]>;\n  /** All the matched route objects as defined in VueRouter constructor */\n  matched: { path: string }[];\n};\n\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next?: () => void) => void) => void;\n}\n\n/**\n * Instrument the Vue router to create navigation spans.\n */\nexport function instrumentVueRouter(\n  router: VueRouter,\n  options: {\n    /**\n     * What to use for route labels.\n     * By default, we use route.name (if set) and else the path.\n     *\n     * Default: 'name'\n     */\n    routeLabel: 'name' | 'path';\n    instrumentPageLoad: boolean;\n    instrumentNavigation: boolean;\n  },\n  startNavigationSpanFn: (context: StartSpanOptions) => void,\n): void {\n  let hasHandledFirstPageLoad = false;\n\n  router.onError(error => captureException(error, { mechanism: { handled: false } }));\n\n  router.beforeEach((to, _from, next) => {\n    // We avoid trying to re-fetch the page load span when we know we already handled it the first time\n    const activePageLoadSpan = !hasHandledFirstPageLoad ? getActivePageLoadSpan() : undefined;\n\n    const attributes: SpanAttributes = {};\n\n    for (const key of Object.keys(to.params)) {\n      attributes[`url.path.parameter.${key}`] = to.params[key];\n      attributes[`params.${key}`] = to.params[key]; // params.[key] is an alias\n    }\n    for (const key of Object.keys(to.query)) {\n      const value = to.query[key];\n      if (value) {\n        attributes[`query.${key}`] = value;\n      }\n    }\n\n    // Determine a name for the routing transaction and where that name came from\n    let spanName: string = to.path;\n    let transactionSource: TransactionSource = 'url';\n    if (to.name && options.routeLabel !== 'path') {\n      spanName = to.name.toString();\n      transactionSource = 'custom';\n    } else if (to.matched.length > 0) {\n      const lastIndex = to.matched.length - 1;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      spanName = to.matched[lastIndex]!.path;\n      transactionSource = 'route';\n    }\n\n    getCurrentScope().setTransactionName(spanName);\n\n    // Update the existing page load span with parametrized route information\n    if (options.instrumentPageLoad && activePageLoadSpan) {\n      const existingAttributes = spanToJSON(activePageLoadSpan).data;\n      if (existingAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] !== 'custom') {\n        activePageLoadSpan.updateName(spanName);\n        activePageLoadSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, transactionSource);\n      }\n\n      // Set router attributes on the existing pageload transaction\n      // This will override the origin, and add params & query attributes\n      activePageLoadSpan.setAttributes({\n        ...attributes,\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.vue',\n      });\n\n      hasHandledFirstPageLoad = true;\n    }\n\n    if (options.instrumentNavigation && !activePageLoadSpan) {\n      startNavigationSpanFn({\n        name: spanName,\n        op: 'navigation',\n        attributes: {\n          ...attributes,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.vue',\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: transactionSource,\n        },\n      });\n    }\n\n    // Vue Router 4 no longer exposes the `next` function, so we need to\n    // check if it's available before calling it.\n    // `next` needs to be called in Vue Router 3 so that the hook is resolved.\n    if (next) {\n      next();\n    }\n  });\n}\n\nfunction getActivePageLoadSpan(): Span | undefined {\n  const span = getActiveSpan();\n  const rootSpan = span && getRootSpan(span);\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  return op === 'pageload' ? rootSpan : undefined;\n}\n"],"names":[],"mappings":"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"}