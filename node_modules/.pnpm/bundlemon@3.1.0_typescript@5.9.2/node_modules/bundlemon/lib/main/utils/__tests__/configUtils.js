"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateRandomString = exports.generateNormalizedConfigRemoteOff = exports.generateNormalizedConfigRemoteOn = void 0;
const bundlemon_utils_1 = require("bundlemon-utils");
const consts_1 = require("../../../common/consts");
const baseNormalizedConfig = {
    baseDir: '',
    defaultCompression: bundlemon_utils_1.Compression.Gzip,
    files: [],
    groups: [],
    pathLabels: consts_1.DEFAULT_PATH_LABELS,
    reportOutput: [],
    verbose: false,
    includeCommitMessage: false,
};
function generateNormalizedConfigRemoteOn(override = {}) {
    const authHeaders = {
        authType: consts_1.CreateCommitRecordAuthType.ProjectApiKey,
        token: generateRandomString(),
    };
    return {
        ...baseNormalizedConfig,
        remote: true,
        projectId: generateRandomString(),
        gitVars: {
            branch: generateRandomString(),
            commitSha: generateRandomString(),
        },
        getCreateCommitRecordAuthParams: () => authHeaders,
        ...override,
    };
}
exports.generateNormalizedConfigRemoteOn = generateNormalizedConfigRemoteOn;
function generateNormalizedConfigRemoteOff(override = {}) {
    return {
        ...baseNormalizedConfig,
        remote: false,
        ...override,
    };
}
exports.generateNormalizedConfigRemoteOff = generateNormalizedConfigRemoteOff;
function generateRandomString(length = 10) {
    return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))
        .toString(36)
        .slice(1);
}
exports.generateRandomString = generateRandomString;
