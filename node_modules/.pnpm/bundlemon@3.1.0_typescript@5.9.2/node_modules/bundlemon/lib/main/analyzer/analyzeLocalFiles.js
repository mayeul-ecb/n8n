"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.analyzeLocalFiles = void 0;
const pathUtils_1 = require("./pathUtils");
const fileDetailsUtils_1 = require("./fileDetailsUtils");
const logger_1 = __importDefault(require("../../common/logger"));
async function analyzeLocalFiles(config) {
    logger_1.default.info(`Start analyzing`);
    const { baseDir, files: filesConfig, groups: groupsConfig, pathLabels } = config;
    const allFiles = await (0, pathUtils_1.getAllPaths)(config.baseDir);
    const [files, groupFiles] = await Promise.all([
        (0, fileDetailsUtils_1.getFilesDetails)({ baseDir, allFiles, pathLabels, config: filesConfig, stopOnMatch: true }),
        (0, fileDetailsUtils_1.getFilesDetails)({ baseDir, allFiles, pathLabels, config: groupsConfig, stopOnMatch: false }),
    ]);
    const groups = (0, fileDetailsUtils_1.groupFilesByPattern)(groupFiles);
    logger_1.default.info(`Finished analyzing`);
    return { files, groups };
}
exports.analyzeLocalFiles = analyzeLocalFiles;
