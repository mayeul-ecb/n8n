"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.groupFilesByPattern = exports.getFilesDetails = void 0;
const getFileSize_1 = require("./getFileSize");
const pathUtils_1 = require("./pathUtils");
async function getFilesDetails({ baseDir, pathLabels, config, allFiles, stopOnMatch, }) {
    const filesConfigMap = config.reduce((acc, curr) => {
        return { ...acc, [curr.path]: curr };
    }, {});
    const matchFiles = await (0, pathUtils_1.getMatchFiles)(baseDir, allFiles, pathLabels, Object.keys(filesConfigMap), stopOnMatch);
    const files = [];
    await Promise.all(Object.entries(matchFiles).map(async ([pattern, matchFiles]) => {
        const { path, ...restFileConfig } = filesConfigMap[pattern];
        for (const { fullPath, prettyPath } of matchFiles) {
            const size = await (0, getFileSize_1.getFileSize)(fullPath, restFileConfig.compression);
            files.push({
                ...restFileConfig,
                pattern,
                path: prettyPath,
                size,
            });
        }
    }));
    return files;
}
exports.getFilesDetails = getFilesDetails;
function groupFilesByPattern(files) {
    const groupsMap = {};
    for (const file of files) {
        const { pattern, size } = file;
        if (!groupsMap[pattern]) {
            groupsMap[pattern] = {
                ...file,
                path: pattern,
                pattern,
                size: 0,
            };
        }
        groupsMap[pattern].size += size;
    }
    return Object.values(groupsMap);
}
exports.groupFilesByPattern = groupFilesByPattern;
