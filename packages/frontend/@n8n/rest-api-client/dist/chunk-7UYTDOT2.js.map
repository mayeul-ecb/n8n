{"version":3,"sources":["../src/api/externalSecrets.ee.ts"],"sourcesContent":["import type { ExternalSecretsProvider } from '@n8n/api-types';\n\nimport type { IRestApiContext } from '../types';\nimport { makeRestApiRequest } from '../utils';\n\nexport const getExternalSecrets = async (\n\tcontext: IRestApiContext,\n): Promise<Record<string, string[]>> => {\n\treturn await makeRestApiRequest(context, 'GET', '/external-secrets/secrets');\n};\n\nexport const getExternalSecretsProviders = async (\n\tcontext: IRestApiContext,\n): Promise<ExternalSecretsProvider[]> => {\n\treturn await makeRestApiRequest(context, 'GET', '/external-secrets/providers');\n};\n\nexport const getExternalSecretsProvider = async (\n\tcontext: IRestApiContext,\n\tid: string,\n): Promise<ExternalSecretsProvider> => {\n\treturn await makeRestApiRequest(context, 'GET', `/external-secrets/providers/${id}`);\n};\n\nexport const testExternalSecretsProviderConnection = async (\n\tcontext: IRestApiContext,\n\tid: string,\n\tdata: ExternalSecretsProvider['data'],\n): Promise<{ testState: ExternalSecretsProvider['state'] }> => {\n\treturn await makeRestApiRequest(context, 'POST', `/external-secrets/providers/${id}/test`, data);\n};\n\nexport const updateProvider = async (\n\tcontext: IRestApiContext,\n\tid: string,\n\tdata: ExternalSecretsProvider['data'],\n): Promise<boolean> => {\n\treturn await makeRestApiRequest(context, 'POST', `/external-secrets/providers/${id}`, data);\n};\n\nexport const reloadProvider = async (\n\tcontext: IRestApiContext,\n\tid: string,\n): Promise<{ updated: boolean }> => {\n\treturn await makeRestApiRequest(context, 'POST', `/external-secrets/providers/${id}/update`);\n};\n\nexport const connectProvider = async (\n\tcontext: IRestApiContext,\n\tid: string,\n\tconnected: boolean,\n): Promise<boolean> => {\n\treturn await makeRestApiRequest(context, 'POST', `/external-secrets/providers/${id}/connect`, {\n\t\tconnected,\n\t});\n};\n"],"mappings":";;;;;AAKO,IAAM,qBAAqB,OACjC,YACuC;AACvC,SAAO,MAAM,mBAAmB,SAAS,OAAO,2BAA2B;AAC5E;AAEO,IAAM,8BAA8B,OAC1C,YACwC;AACxC,SAAO,MAAM,mBAAmB,SAAS,OAAO,6BAA6B;AAC9E;AAEO,IAAM,6BAA6B,OACzC,SACA,OACsC;AACtC,SAAO,MAAM,mBAAmB,SAAS,OAAO,+BAA+B,EAAE,EAAE;AACpF;AAEO,IAAM,wCAAwC,OACpD,SACA,IACA,SAC8D;AAC9D,SAAO,MAAM,mBAAmB,SAAS,QAAQ,+BAA+B,EAAE,SAAS,IAAI;AAChG;AAEO,IAAM,iBAAiB,OAC7B,SACA,IACA,SACsB;AACtB,SAAO,MAAM,mBAAmB,SAAS,QAAQ,+BAA+B,EAAE,IAAI,IAAI;AAC3F;AAEO,IAAM,iBAAiB,OAC7B,SACA,OACmC;AACnC,SAAO,MAAM,mBAAmB,SAAS,QAAQ,+BAA+B,EAAE,SAAS;AAC5F;AAEO,IAAM,kBAAkB,OAC9B,SACA,IACA,cACsB;AACtB,SAAO,MAAM,mBAAmB,SAAS,QAAQ,+BAA+B,EAAE,YAAY;AAAA,IAC7F;AAAA,EACD,CAAC;AACF;","names":[]}