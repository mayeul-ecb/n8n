{"version":3,"sources":["/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-ICKNSBDI.cjs","../src/api/nodeTypes.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACA;ACIA,4EAAkB;AASlB,2CAAsB;AAKtB,MAAA,SAAe,2BAAA,CAA4B,GAAA,EAAa,QAAA,EAAU,CAAA,EAAG,MAAA,EAAQ,GAAA,EAAK;AACjF,EAAA,IAAA,CAAA,IAAS,QAAA,EAAU,CAAA,EAAG,QAAA,EAAU,OAAA,EAAS,OAAA,EAAA,EAAW;AACnD,IAAA,MAAM,SAAA,EAAW,MAAM,eAAA,CAAM,GAAA,CAAI,GAAA,EAAK,EAAE,eAAA,EAAiB,KAAK,CAAC,CAAA;AAE/D,IAAA,GAAA,CAAI,OAAO,QAAA,CAAS,KAAA,IAAS,SAAA,GAAY,QAAA,CAAS,KAAA,IAAS,IAAA,EAAM;AAChE,MAAA,OAAO,QAAA,CAAS,IAAA;AAAA,IACjB;AAEA,IAAA,MAAM,gCAAA,MAAM,EAAQ,OAAO,CAAA;AAAA,EAC5B;AAEA,EAAA,MAAM,IAAI,KAAA,CAAM,4BAA4B,CAAA;AAC7C;AAEA,MAAA,SAAsB,YAAA,CAAa,OAAA,EAAiB;AACnD,EAAA,OAAO,MAAM,2BAAA,CAA4B,QAAA,EAAU,kBAAkB,CAAA;AACtE;AAEA,MAAA,SAAsB,uBAAA,CACrB,OAAA,EAC+B;AAC/B,EAAA,OAAO,MAAM,kDAAA,OAAmB,EAAS,KAAA,EAAO,uBAAuB,CAAA;AACxE;AAEA,MAAA,SAAsB,4BAAA,CACrB,OAAA,EACA,IAAA,EACoC;AACpC,EAAA,OAAO,MAAM,kDAAA;AAAA,IACZ,OAAA;AAAA,IACA,KAAA;AAAA,IACA,CAAA,sBAAA,EAAyB,kBAAA,CAAmB,IAAI,CAAC,CAAA;AAAA,EAAA;AAEnD;AAEA;AAGC,EAAA;AACD;AAEA;AAIC,EAAA;AACD;AAEA;AAIC,EAAA;AACD;AAEA;AAIC,EAAA;AAAa,IAAA;AACZ,IAAA;AACA,IAAA;AACA,IAAA;AACA,EAAA;AAEF;AAEA;AAIC,EAAA;AAAa,IAAA;AACZ,IAAA;AACA,IAAA;AACA,IAAA;AACA,EAAA;AAEF;AAEA;AAIC,EAAA;AAAa,IAAA;AACZ,IAAA;AACA,IAAA;AACA,IAAA;AACA,EAAA;AAEF;AAEA;AAIC,EAAA;AAAa,IAAA;AACZ,IAAA;AACA,IAAA;AACA,IAAA;AACA,EAAA;AAEF;ADpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-ICKNSBDI.cjs","sourcesContent":[null,"import type {\n\tActionResultRequestDto,\n\tCommunityNodeType,\n\tOptionsRequestDto,\n\tResourceLocatorRequestDto,\n\tResourceMapperFieldsRequestDto,\n} from '@n8n/api-types';\nimport type { INodeTranslationHeaders } from '@n8n/i18n';\nimport axios from 'axios';\nimport type {\n\tINodeListSearchResult,\n\tINodePropertyOptions,\n\tINodeTypeDescription,\n\tINodeTypeNameVersion,\n\tNodeParameterValueType,\n\tResourceMapperFields,\n} from 'n8n-workflow';\nimport { sleep } from 'n8n-workflow';\n\nimport type { IRestApiContext } from '../types';\nimport { makeRestApiRequest } from '../utils';\n\nasync function fetchNodeTypesJsonWithRetry(url: string, retries = 5, delay = 500) {\n\tfor (let attempt = 0; attempt < retries; attempt++) {\n\t\tconst response = await axios.get(url, { withCredentials: true });\n\n\t\tif (typeof response.data === 'object' && response.data !== null) {\n\t\t\treturn response.data;\n\t\t}\n\n\t\tawait sleep(delay * attempt);\n\t}\n\n\tthrow new Error('Could not fetch node types');\n}\n\nexport async function getNodeTypes(baseUrl: string) {\n\treturn await fetchNodeTypesJsonWithRetry(baseUrl + 'types/nodes.json');\n}\n\nexport async function fetchCommunityNodeTypes(\n\tcontext: IRestApiContext,\n): Promise<CommunityNodeType[]> {\n\treturn await makeRestApiRequest(context, 'GET', '/community-node-types');\n}\n\nexport async function fetchCommunityNodeAttributes(\n\tcontext: IRestApiContext,\n\ttype: string,\n): Promise<CommunityNodeType | null> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'GET',\n\t\t`/community-node-types/${encodeURIComponent(type)}`,\n\t);\n}\n\nexport async function getNodeTranslationHeaders(\n\tcontext: IRestApiContext,\n): Promise<INodeTranslationHeaders | undefined> {\n\treturn await makeRestApiRequest(context, 'GET', '/node-translation-headers');\n}\n\nexport async function getNodesInformation(\n\tcontext: IRestApiContext,\n\tnodeInfos: INodeTypeNameVersion[],\n): Promise<INodeTypeDescription[]> {\n\treturn await makeRestApiRequest(context, 'POST', '/node-types', { nodeInfos });\n}\n\nexport async function getNodeParameterOptions(\n\tcontext: IRestApiContext,\n\tsendData: OptionsRequestDto,\n): Promise<INodePropertyOptions[]> {\n\treturn await makeRestApiRequest(context, 'POST', '/dynamic-node-parameters/options', sendData);\n}\n\nexport async function getResourceLocatorResults(\n\tcontext: IRestApiContext,\n\tsendData: ResourceLocatorRequestDto,\n): Promise<INodeListSearchResult> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/resource-locator-results',\n\t\tsendData,\n\t);\n}\n\nexport async function getResourceMapperFields(\n\tcontext: IRestApiContext,\n\tsendData: ResourceMapperFieldsRequestDto,\n): Promise<ResourceMapperFields> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/resource-mapper-fields',\n\t\tsendData,\n\t);\n}\n\nexport async function getLocalResourceMapperFields(\n\tcontext: IRestApiContext,\n\tsendData: ResourceMapperFieldsRequestDto,\n): Promise<ResourceMapperFields> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/local-resource-mapper-fields',\n\t\tsendData,\n\t);\n}\n\nexport async function getNodeParameterActionResult(\n\tcontext: IRestApiContext,\n\tsendData: ActionResultRequestDto,\n): Promise<NodeParameterValueType> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/action-result',\n\t\tsendData,\n\t);\n}\n"]}