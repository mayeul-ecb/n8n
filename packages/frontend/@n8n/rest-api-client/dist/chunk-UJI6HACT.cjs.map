{"version":3,"sources":["/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-UJI6HACT.cjs","../src/api/communityNodes.ts"],"names":[],"mappings":"AAAA;AACE;AACA;AACA;AACF,wDAA6B;AAC7B;AACA;ACNA,2CAAkD;AAMlD,MAAA,SAAsB,0BAAA,CACrB,OAAA,EACoC;AACpC,EAAA,MAAM,SAAA,EAAW,MAAM,mCAAA,OAAI,CAAQ,OAAA,EAAS,qBAAqB,CAAA;AACjE,EAAA,OAAO,QAAA,CAAS,KAAA,GAAQ,CAAC,CAAA;AAC1B;AAEA,MAAA,SAAsB,iBAAA,CACrB,OAAA,EACA,IAAA,EACA,MAAA,EACA,OAAA,EACkC;AAClC,EAAA,OAAO,MAAM,oCAAA,OAAK,CAAQ,OAAA,EAAS,qBAAA,EAAuB,EAAE,IAAA,EAAM,MAAA,EAAQ,QAAQ,CAAC,CAAA;AACpF;AAEA,MAAA,SAAsB,gBAAA,CAAiB,OAAA,EAA0B,IAAA,EAA6B;AAC7F,EAAA,OAAO,MAAM,kDAAA,OAAmB,EAAS,QAAA,EAAU,qBAAA,EAAuB,EAAE,KAAK,CAAC,CAAA;AACnF;AAEA,MAAA,SAAsB,aAAA,CACrB,OAAA,EACA,IAAA,EACA,OAAA,EACA,QAAA,EACkC;AAClC,EAAA,OAAO,MAAM,kDAAA,OAAmB,EAAS,OAAA,EAAS,qBAAA,EAAuB;AAAA,IACxE,IAAA;AAAA,IACA,OAAA;AAAA,IACA;AAAA,EACD,CAAC,CAAA;AACF;AAEA,MAAA,SAAsB,iCAAA,CAAA,EAAqD;AAC1E,EAAA,MAAM,SAAA,EAAW,MAAM,mCAAA;AAAA,IACtB,4CAAA;AAAA,IACA;AAAA,EACD,CAAA;AAEA,EAAA,OAAO,QAAA,CAAS,MAAA,GAAS,CAAA;AAC1B;ADdA;AACA;AACE;AACA;AACA;AACA;AACA;AACF,kRAAC","file":"/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-UJI6HACT.cjs","sourcesContent":[null,"import { NPM_COMMUNITY_NODE_SEARCH_API_URL } from '@n8n/constants';\nimport type { PublicInstalledPackage } from 'n8n-workflow';\n\nimport type { IRestApiContext } from '../types';\nimport { get, post, makeRestApiRequest } from '../utils';\n\nexport async function getInstalledCommunityNodes(\n\tcontext: IRestApiContext,\n): Promise<PublicInstalledPackage[]> {\n\tconst response = await get(context.baseUrl, '/community-packages');\n\treturn response.data || [];\n}\n\nexport async function installNewPackage(\n\tcontext: IRestApiContext,\n\tname: string,\n\tverify?: boolean,\n\tversion?: string,\n): Promise<PublicInstalledPackage> {\n\treturn await post(context.baseUrl, '/community-packages', { name, verify, version });\n}\n\nexport async function uninstallPackage(context: IRestApiContext, name: string): Promise<void> {\n\treturn await makeRestApiRequest(context, 'DELETE', '/community-packages', { name });\n}\n\nexport async function updatePackage(\n\tcontext: IRestApiContext,\n\tname: string,\n\tversion?: string,\n\tchecksum?: string,\n): Promise<PublicInstalledPackage> {\n\treturn await makeRestApiRequest(context, 'PATCH', '/community-packages', {\n\t\tname,\n\t\tversion,\n\t\tchecksum,\n\t});\n}\n\nexport async function getAvailableCommunityPackageCount(): Promise<number> {\n\tconst response = await get(\n\t\tNPM_COMMUNITY_NODE_SEARCH_API_URL,\n\t\t'search?q=keywords:n8n-community-node-package',\n\t);\n\n\treturn response.total || 0;\n}\n"]}