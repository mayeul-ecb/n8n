{"version":3,"sources":["/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-CG7MWVBX.cjs","../src/api/versions.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACA;ACJA,2CAA4D;AAiD5D,MAAA,SAAsB,eAAA,CACrB,QAAA,EACA,cAAA,EACA,UAAA,EACqB;AACrB,EAAA,MAAM,QAAA,EAAU,EAAE,CAAC,6BAA4B,CAAA,EAAG,WAAW,CAAA;AAC7D,EAAA,OAAO,MAAM,mCAAA,QAAI,EAAU,cAAA,EAAgB,CAAC,CAAA,EAAG,OAAO,CAAA;AACvD;AAEA,MAAA,SAAsB,kBAAA,CACrB,QAAA,EACA,cAAA,EACA,UAAA,EAC2B;AAC3B,EAAA,MAAM,QAAA,EAAU;AAAA,IACf,CAAC,6BAA4B,CAAA,EAAG,UAAA;AAAA,IAChC,CAAC,kCAAiC,CAAA,EAAG;AAAA,EACtC,CAAA;AACA,EAAA,OAAO,MAAM,mCAAA,QAAI,EAAU,EAAA,EAAI,CAAC,CAAA,EAAG,OAAO,CAAA;AAC3C;ADnDA;AACA;AACE;AACA;AACF,2FAAC","file":"/home/mayeul/projects/n8n/packages/frontend/@n8n/rest-api-client/dist/chunk-CG7MWVBX.cjs","sourcesContent":[null,"import { INSTANCE_ID_HEADER, INSTANCE_VERSION_HEADER } from '@n8n/constants';\nimport type { INodeParameters } from 'n8n-workflow';\n\nimport { get } from '../utils';\n\nexport interface VersionNode {\n\tname: string;\n\tdisplayName: string;\n\ticon: string;\n\ticonUrl?: string;\n\tdefaults: INodeParameters;\n\ticonData: {\n\t\ttype: string;\n\t\ticon?: string;\n\t\tfileBuffer?: string;\n\t};\n\ttypeVersion?: number;\n}\n\nexport interface Version {\n\tname: string;\n\tnodes: VersionNode[];\n\tcreatedAt: string;\n\tdescription: string;\n\tdocumentationUrl: string;\n\thasBreakingChange: boolean;\n\thasSecurityFix: boolean;\n\thasSecurityIssue: boolean;\n\tsecurityIssueFixVersion: string;\n}\n\nexport interface WhatsNewSection {\n\ttitle: string;\n\tcalloutText: string;\n\tfooter: string;\n\titems: WhatsNewArticle[];\n\tcreatedAt: string;\n\tupdatedAt: string | null;\n}\n\nexport interface WhatsNewArticle {\n\tid: number;\n\tcreatedAt: string;\n\tupdatedAt: string | null;\n\tpublishedAt: string;\n\ttitle: string;\n\tcontent: string;\n}\n\nexport async function getNextVersions(\n\tendpoint: string,\n\tcurrentVersion: string,\n\tinstanceId: string,\n): Promise<Version[]> {\n\tconst headers = { [INSTANCE_ID_HEADER as string]: instanceId };\n\treturn await get(endpoint, currentVersion, {}, headers);\n}\n\nexport async function getWhatsNewSection(\n\tendpoint: string,\n\tcurrentVersion: string,\n\tinstanceId: string,\n): Promise<WhatsNewSection> {\n\tconst headers = {\n\t\t[INSTANCE_ID_HEADER as string]: instanceId,\n\t\t[INSTANCE_VERSION_HEADER as string]: currentVersion,\n\t};\n\treturn await get(endpoint, '', {}, headers);\n}\n"]}