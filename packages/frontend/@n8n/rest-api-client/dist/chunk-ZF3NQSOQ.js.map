{"version":3,"sources":["../src/api/nodeTypes.ts"],"sourcesContent":["import type {\n\tActionResultRequestDto,\n\tCommunityNodeType,\n\tOptionsRequestDto,\n\tResourceLocatorRequestDto,\n\tResourceMapperFieldsRequestDto,\n} from '@n8n/api-types';\nimport type { INodeTranslationHeaders } from '@n8n/i18n';\nimport axios from 'axios';\nimport type {\n\tINodeListSearchResult,\n\tINodePropertyOptions,\n\tINodeTypeDescription,\n\tINodeTypeNameVersion,\n\tNodeParameterValueType,\n\tResourceMapperFields,\n} from 'n8n-workflow';\nimport { sleep } from 'n8n-workflow';\n\nimport type { IRestApiContext } from '../types';\nimport { makeRestApiRequest } from '../utils';\n\nasync function fetchNodeTypesJsonWithRetry(url: string, retries = 5, delay = 500) {\n\tfor (let attempt = 0; attempt < retries; attempt++) {\n\t\tconst response = await axios.get(url, { withCredentials: true });\n\n\t\tif (typeof response.data === 'object' && response.data !== null) {\n\t\t\treturn response.data;\n\t\t}\n\n\t\tawait sleep(delay * attempt);\n\t}\n\n\tthrow new Error('Could not fetch node types');\n}\n\nexport async function getNodeTypes(baseUrl: string) {\n\treturn await fetchNodeTypesJsonWithRetry(baseUrl + 'types/nodes.json');\n}\n\nexport async function fetchCommunityNodeTypes(\n\tcontext: IRestApiContext,\n): Promise<CommunityNodeType[]> {\n\treturn await makeRestApiRequest(context, 'GET', '/community-node-types');\n}\n\nexport async function fetchCommunityNodeAttributes(\n\tcontext: IRestApiContext,\n\ttype: string,\n): Promise<CommunityNodeType | null> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'GET',\n\t\t`/community-node-types/${encodeURIComponent(type)}`,\n\t);\n}\n\nexport async function getNodeTranslationHeaders(\n\tcontext: IRestApiContext,\n): Promise<INodeTranslationHeaders | undefined> {\n\treturn await makeRestApiRequest(context, 'GET', '/node-translation-headers');\n}\n\nexport async function getNodesInformation(\n\tcontext: IRestApiContext,\n\tnodeInfos: INodeTypeNameVersion[],\n): Promise<INodeTypeDescription[]> {\n\treturn await makeRestApiRequest(context, 'POST', '/node-types', { nodeInfos });\n}\n\nexport async function getNodeParameterOptions(\n\tcontext: IRestApiContext,\n\tsendData: OptionsRequestDto,\n): Promise<INodePropertyOptions[]> {\n\treturn await makeRestApiRequest(context, 'POST', '/dynamic-node-parameters/options', sendData);\n}\n\nexport async function getResourceLocatorResults(\n\tcontext: IRestApiContext,\n\tsendData: ResourceLocatorRequestDto,\n): Promise<INodeListSearchResult> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/resource-locator-results',\n\t\tsendData,\n\t);\n}\n\nexport async function getResourceMapperFields(\n\tcontext: IRestApiContext,\n\tsendData: ResourceMapperFieldsRequestDto,\n): Promise<ResourceMapperFields> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/resource-mapper-fields',\n\t\tsendData,\n\t);\n}\n\nexport async function getLocalResourceMapperFields(\n\tcontext: IRestApiContext,\n\tsendData: ResourceMapperFieldsRequestDto,\n): Promise<ResourceMapperFields> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/local-resource-mapper-fields',\n\t\tsendData,\n\t);\n}\n\nexport async function getNodeParameterActionResult(\n\tcontext: IRestApiContext,\n\tsendData: ActionResultRequestDto,\n): Promise<NodeParameterValueType> {\n\treturn await makeRestApiRequest(\n\t\tcontext,\n\t\t'POST',\n\t\t'/dynamic-node-parameters/action-result',\n\t\tsendData,\n\t);\n}\n"],"mappings":";;;;;AAQA,OAAO,WAAW;AASlB,SAAS,aAAa;AAKtB,eAAe,4BAA4B,KAAa,UAAU,GAAG,QAAQ,KAAK;AACjF,WAAS,UAAU,GAAG,UAAU,SAAS,WAAW;AACnD,UAAM,WAAW,MAAM,MAAM,IAAI,KAAK,EAAE,iBAAiB,KAAK,CAAC;AAE/D,QAAI,OAAO,SAAS,SAAS,YAAY,SAAS,SAAS,MAAM;AAChE,aAAO,SAAS;AAAA,IACjB;AAEA,UAAM,MAAM,QAAQ,OAAO;AAAA,EAC5B;AAEA,QAAM,IAAI,MAAM,4BAA4B;AAC7C;AAEA,eAAsB,aAAa,SAAiB;AACnD,SAAO,MAAM,4BAA4B,UAAU,kBAAkB;AACtE;AAEA,eAAsB,wBACrB,SAC+B;AAC/B,SAAO,MAAM,mBAAmB,SAAS,OAAO,uBAAuB;AACxE;AAEA,eAAsB,6BACrB,SACA,MACoC;AACpC,SAAO,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA,yBAAyB,mBAAmB,IAAI,CAAC;AAAA,EAClD;AACD;AAEA,eAAsB,0BACrB,SAC+C;AAC/C,SAAO,MAAM,mBAAmB,SAAS,OAAO,2BAA2B;AAC5E;AAEA,eAAsB,oBACrB,SACA,WACkC;AAClC,SAAO,MAAM,mBAAmB,SAAS,QAAQ,eAAe,EAAE,UAAU,CAAC;AAC9E;AAEA,eAAsB,wBACrB,SACA,UACkC;AAClC,SAAO,MAAM,mBAAmB,SAAS,QAAQ,oCAAoC,QAAQ;AAC9F;AAEA,eAAsB,0BACrB,SACA,UACiC;AACjC,SAAO,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAEA,eAAsB,wBACrB,SACA,UACgC;AAChC,SAAO,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAEA,eAAsB,6BACrB,SACA,UACgC;AAChC,SAAO,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAEA,eAAsB,6BACrB,SACA,UACkC;AAClC,SAAO,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;","names":[]}