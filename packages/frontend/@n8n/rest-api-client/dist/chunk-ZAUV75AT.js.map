{"version":3,"sources":["../src/api/cloudPlans.ts"],"sourcesContent":["import type { IRestApiContext } from '../types';\nimport { get, post } from '../utils';\n\nexport declare namespace Cloud {\n\texport interface PlanData {\n\t\tplanId: number;\n\t\tmonthlyExecutionsLimit: number;\n\t\tactiveWorkflowsLimit: number;\n\t\tcredentialsLimit: number;\n\t\tisActive: boolean;\n\t\tdisplayName: string;\n\t\texpirationDate: string;\n\t\tmetadata: PlanMetadata;\n\t}\n\n\texport interface PlanMetadata {\n\t\tversion: 'v1';\n\t\tgroup: 'opt-out' | 'opt-in' | 'trial';\n\t\tslug: 'pro-1' | 'pro-2' | 'starter' | 'trial-1';\n\t\ttrial?: Trial;\n\t}\n\n\tinterface Trial {\n\t\tlength: number;\n\t\tgracePeriod: number;\n\t}\n\n\texport type UserAccount = {\n\t\tconfirmed: boolean;\n\t\tusername: string;\n\t\temail: string;\n\t\thasEarlyAccess?: boolean;\n\t\trole?: string;\n\t\tselectedApps?: string[];\n\t\tinformation?: {\n\t\t\t[key: string]: string | string[];\n\t\t};\n\t};\n}\n\nexport interface InstanceUsage {\n\ttimeframe?: string;\n\texecutions: number;\n\tactiveWorkflows: number;\n}\n\nexport async function getCurrentPlan(context: IRestApiContext): Promise<Cloud.PlanData> {\n\treturn await get(context.baseUrl, '/admin/cloud-plan');\n}\n\nexport async function getCurrentUsage(context: IRestApiContext): Promise<InstanceUsage> {\n\treturn await get(context.baseUrl, '/cloud/limits');\n}\n\nexport async function getCloudUserInfo(context: IRestApiContext): Promise<Cloud.UserAccount> {\n\treturn await get(context.baseUrl, '/cloud/proxy/user/me');\n}\n\nexport async function sendConfirmationEmail(context: IRestApiContext): Promise<Cloud.UserAccount> {\n\treturn await post(context.baseUrl, '/cloud/proxy/user/resend-confirmation-email');\n}\n\nexport async function getAdminPanelLoginCode(context: IRestApiContext): Promise<{ code: string }> {\n\treturn await get(context.baseUrl, '/cloud/proxy/login/code');\n}\n"],"mappings":";;;;;;AA8CA,eAAsB,eAAe,SAAmD;AACvF,SAAO,MAAM,IAAI,QAAQ,SAAS,mBAAmB;AACtD;AAEA,eAAsB,gBAAgB,SAAkD;AACvF,SAAO,MAAM,IAAI,QAAQ,SAAS,eAAe;AAClD;AAEA,eAAsB,iBAAiB,SAAsD;AAC5F,SAAO,MAAM,IAAI,QAAQ,SAAS,sBAAsB;AACzD;AAEA,eAAsB,sBAAsB,SAAsD;AACjG,SAAO,MAAM,KAAK,QAAQ,SAAS,6CAA6C;AACjF;AAEA,eAAsB,uBAAuB,SAAqD;AACjG,SAAO,MAAM,IAAI,QAAQ,SAAS,yBAAyB;AAC5D;","names":[]}