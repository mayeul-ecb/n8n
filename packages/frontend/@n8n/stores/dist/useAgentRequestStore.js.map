{"version":3,"sources":["../src/useAgentRequestStore.ts"],"sourcesContent":["import { useLocalStorage } from '@vueuse/core';\nimport type { INodeParameters, NodeParameterValueType } from 'n8n-workflow';\nimport { defineStore } from 'pinia';\n\nconst LOCAL_STORAGE_AGENT_REQUESTS = 'N8N_AGENT_REQUESTS';\n\nexport interface IAgentRequest {\n\tquery: INodeParameters | string;\n\ttoolName?: string;\n}\n\nexport interface IAgentRequestStoreState {\n\t[workflowId: string]: {\n\t\t[nodeName: string]: IAgentRequest;\n\t};\n}\n\nexport const useAgentRequestStore = defineStore('agentRequest', () => {\n\t// State\n\tconst agentRequests = useLocalStorage<IAgentRequestStoreState>(LOCAL_STORAGE_AGENT_REQUESTS, {});\n\n\t// Helper function to ensure workflow and node entries exist\n\tconst ensureWorkflowAndNodeExist = (workflowId: string, nodeId: string): void => {\n\t\tif (!agentRequests.value[workflowId]) {\n\t\t\tagentRequests.value[workflowId] = {};\n\t\t}\n\n\t\tif (!agentRequests.value[workflowId][nodeId]) {\n\t\t\tagentRequests.value[workflowId][nodeId] = { query: {} };\n\t\t}\n\t};\n\n\t// Getters\n\tconst getAgentRequests = (workflowId: string, nodeId: string): INodeParameters | string => {\n\t\treturn agentRequests.value[workflowId]?.[nodeId]?.query || {};\n\t};\n\n\tconst getQueryValue = (\n\t\tworkflowId: string,\n\t\tnodeId: string,\n\t\tparamName: string,\n\t): NodeParameterValueType | undefined => {\n\t\tconst query = agentRequests.value[workflowId]?.[nodeId]?.query;\n\t\tif (typeof query === 'string') {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn query?.[paramName];\n\t};\n\n\tconst setAgentRequestForNode = (\n\t\tworkflowId: string,\n\t\tnodeId: string,\n\t\trequest: IAgentRequest,\n\t): void => {\n\t\tensureWorkflowAndNodeExist(workflowId, nodeId);\n\n\t\tagentRequests.value[workflowId][nodeId] = {\n\t\t\t...request,\n\t\t\tquery: typeof request.query === 'string' ? request.query : { ...request.query },\n\t\t};\n\t};\n\n\tconst clearAgentRequests = (workflowId: string, nodeId: string): void => {\n\t\tif (agentRequests.value[workflowId]) {\n\t\t\tagentRequests.value[workflowId][nodeId] = { query: {} };\n\t\t}\n\t};\n\n\tconst clearAllAgentRequests = (workflowId?: string): void => {\n\t\tif (workflowId) {\n\t\t\tagentRequests.value[workflowId] = {};\n\t\t} else {\n\t\t\tagentRequests.value = {};\n\t\t}\n\t};\n\n\tconst getAgentRequest = (workflowId: string, nodeId: string): IAgentRequest | undefined => {\n\t\tif (agentRequests.value[workflowId]) return agentRequests.value[workflowId]?.[nodeId];\n\t\treturn undefined;\n\t};\n\n\treturn {\n\t\tagentRequests,\n\t\tgetAgentRequests,\n\t\tgetQueryValue,\n\t\tsetAgentRequestForNode,\n\t\tclearAgentRequests,\n\t\tclearAllAgentRequests,\n\t\tgetAgentRequest,\n\t};\n});\n"],"mappings":";AAAA,SAAS,uBAAuB;AAEhC,SAAS,mBAAmB;AAE5B,IAAM,+BAA+B;AAa9B,IAAM,uBAAuB,YAAY,gBAAgB,MAAM;AAErE,QAAM,gBAAgB,gBAAyC,8BAA8B,CAAC,CAAC;AAG/F,QAAM,6BAA6B,CAAC,YAAoB,WAAyB;AAChF,QAAI,CAAC,cAAc,MAAM,UAAU,GAAG;AACrC,oBAAc,MAAM,UAAU,IAAI,CAAC;AAAA,IACpC;AAEA,QAAI,CAAC,cAAc,MAAM,UAAU,EAAE,MAAM,GAAG;AAC7C,oBAAc,MAAM,UAAU,EAAE,MAAM,IAAI,EAAE,OAAO,CAAC,EAAE;AAAA,IACvD;AAAA,EACD;AAGA,QAAM,mBAAmB,CAAC,YAAoB,WAA6C;AAC1F,WAAO,cAAc,MAAM,UAAU,IAAI,MAAM,GAAG,SAAS,CAAC;AAAA,EAC7D;AAEA,QAAM,gBAAgB,CACrB,YACA,QACA,cACwC;AACxC,UAAM,QAAQ,cAAc,MAAM,UAAU,IAAI,MAAM,GAAG;AACzD,QAAI,OAAO,UAAU,UAAU;AAC9B,aAAO;AAAA,IACR;AACA,WAAO,QAAQ,SAAS;AAAA,EACzB;AAEA,QAAM,yBAAyB,CAC9B,YACA,QACA,YACU;AACV,+BAA2B,YAAY,MAAM;AAE7C,kBAAc,MAAM,UAAU,EAAE,MAAM,IAAI;AAAA,MACzC,GAAG;AAAA,MACH,OAAO,OAAO,QAAQ,UAAU,WAAW,QAAQ,QAAQ,EAAE,GAAG,QAAQ,MAAM;AAAA,IAC/E;AAAA,EACD;AAEA,QAAM,qBAAqB,CAAC,YAAoB,WAAyB;AACxE,QAAI,cAAc,MAAM,UAAU,GAAG;AACpC,oBAAc,MAAM,UAAU,EAAE,MAAM,IAAI,EAAE,OAAO,CAAC,EAAE;AAAA,IACvD;AAAA,EACD;AAEA,QAAM,wBAAwB,CAAC,eAA8B;AAC5D,QAAI,YAAY;AACf,oBAAc,MAAM,UAAU,IAAI,CAAC;AAAA,IACpC,OAAO;AACN,oBAAc,QAAQ,CAAC;AAAA,IACxB;AAAA,EACD;AAEA,QAAM,kBAAkB,CAAC,YAAoB,WAA8C;AAC1F,QAAI,cAAc,MAAM,UAAU,EAAG,QAAO,cAAc,MAAM,UAAU,IAAI,MAAM;AACpF,WAAO;AAAA,EACR;AAEA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD,CAAC;","names":[]}