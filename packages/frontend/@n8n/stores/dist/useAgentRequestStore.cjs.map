{"version":3,"sources":["/home/mayeul/projects/n8n/packages/frontend/@n8n/stores/dist/useAgentRequestStore.cjs","../src/useAgentRequestStore.ts"],"names":[],"mappings":"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","file":"/home/mayeul/projects/n8n/packages/frontend/@n8n/stores/dist/useAgentRequestStore.cjs","sourcesContent":[null,"import { useLocalStorage } from '@vueuse/core';\nimport type { INodeParameters, NodeParameterValueType } from 'n8n-workflow';\nimport { defineStore } from 'pinia';\n\nconst LOCAL_STORAGE_AGENT_REQUESTS = 'N8N_AGENT_REQUESTS';\n\nexport interface IAgentRequest {\n\tquery: INodeParameters | string;\n\ttoolName?: string;\n}\n\nexport interface IAgentRequestStoreState {\n\t[workflowId: string]: {\n\t\t[nodeName: string]: IAgentRequest;\n\t};\n}\n\nexport const useAgentRequestStore = defineStore('agentRequest', () => {\n\t// State\n\tconst agentRequests = useLocalStorage<IAgentRequestStoreState>(LOCAL_STORAGE_AGENT_REQUESTS, {});\n\n\t// Helper function to ensure workflow and node entries exist\n\tconst ensureWorkflowAndNodeExist = (workflowId: string, nodeId: string): void => {\n\t\tif (!agentRequests.value[workflowId]) {\n\t\t\tagentRequests.value[workflowId] = {};\n\t\t}\n\n\t\tif (!agentRequests.value[workflowId][nodeId]) {\n\t\t\tagentRequests.value[workflowId][nodeId] = { query: {} };\n\t\t}\n\t};\n\n\t// Getters\n\tconst getAgentRequests = (workflowId: string, nodeId: string): INodeParameters | string => {\n\t\treturn agentRequests.value[workflowId]?.[nodeId]?.query || {};\n\t};\n\n\tconst getQueryValue = (\n\t\tworkflowId: string,\n\t\tnodeId: string,\n\t\tparamName: string,\n\t): NodeParameterValueType | undefined => {\n\t\tconst query = agentRequests.value[workflowId]?.[nodeId]?.query;\n\t\tif (typeof query === 'string') {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn query?.[paramName];\n\t};\n\n\tconst setAgentRequestForNode = (\n\t\tworkflowId: string,\n\t\tnodeId: string,\n\t\trequest: IAgentRequest,\n\t): void => {\n\t\tensureWorkflowAndNodeExist(workflowId, nodeId);\n\n\t\tagentRequests.value[workflowId][nodeId] = {\n\t\t\t...request,\n\t\t\tquery: typeof request.query === 'string' ? request.query : { ...request.query },\n\t\t};\n\t};\n\n\tconst clearAgentRequests = (workflowId: string, nodeId: string): void => {\n\t\tif (agentRequests.value[workflowId]) {\n\t\t\tagentRequests.value[workflowId][nodeId] = { query: {} };\n\t\t}\n\t};\n\n\tconst clearAllAgentRequests = (workflowId?: string): void => {\n\t\tif (workflowId) {\n\t\t\tagentRequests.value[workflowId] = {};\n\t\t} else {\n\t\t\tagentRequests.value = {};\n\t\t}\n\t};\n\n\tconst getAgentRequest = (workflowId: string, nodeId: string): IAgentRequest | undefined => {\n\t\tif (agentRequests.value[workflowId]) return agentRequests.value[workflowId]?.[nodeId];\n\t\treturn undefined;\n\t};\n\n\treturn {\n\t\tagentRequests,\n\t\tgetAgentRequests,\n\t\tgetQueryValue,\n\t\tsetAgentRequestForNode,\n\t\tclearAgentRequests,\n\t\tclearAllAgentRequests,\n\t\tgetAgentRequest,\n\t};\n});\n"]}