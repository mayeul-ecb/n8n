{"version":3,"sources":["../src/metaTagConfig.ts"],"sourcesContent":["function getTagName(configName: string): string {\n\treturn `n8n:config:${configName}`;\n}\n\n/**\n * Utility function to read and decode base64-encoded configuration values from meta tags\n */\nexport function getConfigFromMetaTag(configName: string): string | null {\n\tconst tagName = getTagName(configName);\n\n\ttry {\n\t\tconst metaTag = document.querySelector(`meta[name=\"${tagName}\"]`);\n\t\tif (!metaTag) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst encodedContent = metaTag.getAttribute('content');\n\t\tif (!encodedContent) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Decode base64 content\n\t\tconst content = atob(encodedContent);\n\t\treturn content;\n\t} catch (error) {\n\t\tconsole.warn(`Failed to read n8n config for \"${tagName}\":`, error);\n\t\treturn null;\n\t}\n}\n\n/**\n * Utility function to read and parse configuration values from meta tags\n */\nexport function getAndParseConfigFromMetaTag<T>(configName: string): T | null {\n\tconst config = getConfigFromMetaTag(configName);\n\tif (!config) {\n\t\treturn null;\n\t}\n\n\ttry {\n\t\treturn JSON.parse(config) as T;\n\t} catch (error) {\n\t\tconsole.warn(`Failed to parse n8n config for \"${getTagName(configName)}\":`, error);\n\t\treturn null;\n\t}\n}\n"],"mappings":";AAAA,SAAS,WAAW,YAA4B;AAC/C,SAAO,cAAc,UAAU;AAChC;AAKO,SAAS,qBAAqB,YAAmC;AACvE,QAAM,UAAU,WAAW,UAAU;AAErC,MAAI;AACH,UAAM,UAAU,SAAS,cAAc,cAAc,OAAO,IAAI;AAChE,QAAI,CAAC,SAAS;AACb,aAAO;AAAA,IACR;AAEA,UAAM,iBAAiB,QAAQ,aAAa,SAAS;AACrD,QAAI,CAAC,gBAAgB;AACpB,aAAO;AAAA,IACR;AAGA,UAAM,UAAU,KAAK,cAAc;AACnC,WAAO;AAAA,EACR,SAAS,OAAO;AACf,YAAQ,KAAK,kCAAkC,OAAO,MAAM,KAAK;AACjE,WAAO;AAAA,EACR;AACD;AAKO,SAAS,6BAAgC,YAA8B;AAC7E,QAAM,SAAS,qBAAqB,UAAU;AAC9C,MAAI,CAAC,QAAQ;AACZ,WAAO;AAAA,EACR;AAEA,MAAI;AACH,WAAO,KAAK,MAAM,MAAM;AAAA,EACzB,SAAS,OAAO;AACf,YAAQ,KAAK,mCAAmC,WAAW,UAAU,CAAC,MAAM,KAAK;AACjF,WAAO;AAAA,EACR;AACD;","names":[]}