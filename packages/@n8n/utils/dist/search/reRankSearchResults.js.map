{"version":3,"sources":["../../src/search/reRankSearchResults.ts"],"sourcesContent":["export function reRankSearchResults<T extends { key: string }>(\n\tsearchResults: Array<{ score: number; item: T }>,\n\tadditionalFactors: Record<string, Record<string, number>>,\n): Array<{ score: number; item: T }> {\n\treturn searchResults\n\t\t.map(({ score, item }) => {\n\t\t\t// For each additional factor, we check if it exists for the item and type,\n\t\t\t// and if so, we add the score to the item's score.\n\t\t\tconst additionalScore = Object.entries(additionalFactors).reduce((acc, [_, factorScores]) => {\n\t\t\t\tconst factorScore = factorScores[item.key];\n\t\t\t\tif (factorScore) {\n\t\t\t\t\treturn acc + factorScore;\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, 0);\n\n\t\t\treturn {\n\t\t\t\tscore: score + additionalScore,\n\t\t\t\titem,\n\t\t\t};\n\t\t})\n\t\t.sort((a, b) => {\n\t\t\treturn b.score - a.score;\n\t\t});\n}\n"],"mappings":";AAAO,SAAS,oBACf,eACA,mBACoC;AACpC,SAAO,cACL,IAAI,CAAC,EAAE,OAAO,KAAK,MAAM;AAGzB,UAAM,kBAAkB,OAAO,QAAQ,iBAAiB,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,YAAY,MAAM;AAC5F,YAAM,cAAc,aAAa,KAAK,GAAG;AACzC,UAAI,aAAa;AAChB,eAAO,MAAM;AAAA,MACd;AAEA,aAAO;AAAA,IACR,GAAG,CAAC;AAEJ,WAAO;AAAA,MACN,OAAO,QAAQ;AAAA,MACf;AAAA,IACD;AAAA,EACD,CAAC,EACA,KAAK,CAAC,GAAG,MAAM;AACf,WAAO,EAAE,QAAQ,EAAE;AAAA,EACpB,CAAC;AACH;","names":[]}