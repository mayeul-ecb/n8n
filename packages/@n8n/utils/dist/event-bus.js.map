{"version":3,"sources":["../src/event-bus.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type CallbackFn = (...args: any[]) => any;\n\ntype Payloads<ListenerMap> = {\n\t[E in keyof ListenerMap]: unknown;\n};\n\ntype Listener<Payload> = (payload: Payload) => void;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface EventBus<ListenerMap extends Payloads<ListenerMap> = Record<string, any>> {\n\ton<EventName extends keyof ListenerMap & string>(\n\t\teventName: EventName,\n\t\tfn: Listener<ListenerMap[EventName]>,\n\t): void;\n\n\tonce<EventName extends keyof ListenerMap & string>(\n\t\teventName: EventName,\n\t\tfn: Listener<ListenerMap[EventName]>,\n\t): void;\n\n\toff<EventName extends keyof ListenerMap & string>(\n\t\teventName: EventName,\n\t\tfn: Listener<ListenerMap[EventName]>,\n\t): void;\n\n\temit<EventName extends keyof ListenerMap & string>(\n\t\teventName: EventName,\n\t\tevent?: ListenerMap[EventName],\n\t): void;\n}\n\n/**\n * Creates an event bus with the given listener map.\n *\n * @example\n * ```ts\n * const eventBus = createEventBus<{\n *   'user-logged-in': { username: string };\n *   'user-logged-out': never;\n * }>();\n */\nexport function createEventBus<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tListenerMap extends Payloads<ListenerMap> = Record<string, any>,\n>(): EventBus<ListenerMap> {\n\tconst handlers = new Map<string, CallbackFn[]>();\n\n\treturn {\n\t\ton(eventName, fn) {\n\t\t\tlet eventFns = handlers.get(eventName);\n\t\t\tif (!eventFns) {\n\t\t\t\teventFns = [fn];\n\t\t\t} else {\n\t\t\t\teventFns.push(fn);\n\t\t\t}\n\t\t\thandlers.set(eventName, eventFns);\n\t\t},\n\n\t\tonce(eventName, fn) {\n\t\t\tconst handler: typeof fn = (payload) => {\n\t\t\t\tthis.off(eventName, handler);\n\t\t\t\tfn(payload);\n\t\t\t};\n\t\t\tthis.on(eventName, handler);\n\t\t},\n\n\t\toff(eventName, fn) {\n\t\t\tconst eventFns = handlers.get(eventName);\n\t\t\tif (eventFns) {\n\t\t\t\teventFns.splice(eventFns.indexOf(fn) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\temit(eventName, event) {\n\t\t\tconst eventFns = handlers.get(eventName);\n\t\t\tif (eventFns) {\n\t\t\t\teventFns.slice().forEach((handler) => {\n\t\t\t\t\thandler(event);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n}\n"],"mappings":";AA0CO,SAAS,iBAGW;AAC1B,QAAM,WAAW,oBAAI,IAA0B;AAE/C,SAAO;AAAA,IACN,GAAG,WAAW,IAAI;AACjB,UAAI,WAAW,SAAS,IAAI,SAAS;AACrC,UAAI,CAAC,UAAU;AACd,mBAAW,CAAC,EAAE;AAAA,MACf,OAAO;AACN,iBAAS,KAAK,EAAE;AAAA,MACjB;AACA,eAAS,IAAI,WAAW,QAAQ;AAAA,IACjC;AAAA,IAEA,KAAK,WAAW,IAAI;AACnB,YAAM,UAAqB,CAAC,YAAY;AACvC,aAAK,IAAI,WAAW,OAAO;AAC3B,WAAG,OAAO;AAAA,MACX;AACA,WAAK,GAAG,WAAW,OAAO;AAAA,IAC3B;AAAA,IAEA,IAAI,WAAW,IAAI;AAClB,YAAM,WAAW,SAAS,IAAI,SAAS;AACvC,UAAI,UAAU;AACb,iBAAS,OAAO,SAAS,QAAQ,EAAE,MAAM,GAAG,CAAC;AAAA,MAC9C;AAAA,IACD;AAAA,IAEA,KAAK,WAAW,OAAO;AACtB,YAAM,WAAW,SAAS,IAAI,SAAS;AACvC,UAAI,UAAU;AACb,iBAAS,MAAM,EAAE,QAAQ,CAAC,YAAY;AACrC,kBAAQ,KAAK;AAAA,QACd,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;","names":[]}